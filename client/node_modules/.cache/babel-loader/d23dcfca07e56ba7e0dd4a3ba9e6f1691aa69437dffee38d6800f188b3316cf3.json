{"ast":null,"code":"var _jsxFileName = \"C:\\\\mernstackf\\\\mernproject\\\\client\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\n// client/src/components/Quiz.js\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport './Quiz.css'; // ðŸ‘ˆ Import the CSS file\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Quiz() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [current, setCurrent] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/questions\").then(res => {\n      setQuestions(res.data);\n    });\n  }, []);\n  const handleAnswer = option => {\n    if (option === questions[current].answer) {\n      setScore(score + 1);\n    }\n    const next = current + 1;\n    if (next < questions.length) {\n      setCurrent(next);\n    } else {\n      setShowScore(true);\n    }\n  };\n  if (!questions.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 33\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-background\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-container\",\n      children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-display\",\n        children: [\"You scored \", score, \" out of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-count\",\n          children: [\"Question \", current + 1, \" / \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: questions[current].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: questions[current].options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAnswer(option),\n            className: \"option-button\",\n            children: option\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this);\n}\n_s(Quiz, \"gwWBVjsgreew6nHoqM/rxDtwREk=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","_s","questions","setQuestions","current","setCurrent","score","setScore","showScore","setShowScore","get","then","res","data","handleAnswer","option","answer","next","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","question","options","map","onClick","_c","$RefreshReg$"],"sources":["C:/mernstackf/mernproject/client/src/components/Quiz.js"],"sourcesContent":["// client/src/components/Quiz.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport './Quiz.css'; // ðŸ‘ˆ Import the CSS file\r\n\r\nfunction Quiz() {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [current, setCurrent] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:5000/questions\").then(res => {\r\n      setQuestions(res.data);\r\n    });\r\n  }, []);\r\n\r\n  const handleAnswer = (option) => {\r\n    if (option === questions[current].answer) {\r\n      setScore(score + 1);\r\n    }\r\n    const next = current + 1;\r\n    if (next < questions.length) {\r\n      setCurrent(next);\r\n    } else {\r\n      setShowScore(true);\r\n    }\r\n  };\r\n\r\n  if (!questions.length) return <div className=\"quiz-container\">Loading...</div>;\r\n\r\n  return (\r\n  <div className=\"page-background\">\r\n    <div className=\"quiz-container\">\r\n      {showScore ? (\r\n        <div className=\"score-display\">\r\n          You scored {score} out of {questions.length}\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"question-count\">\r\n            Question {current + 1} / {questions.length}\r\n          </div>\r\n          <div className=\"question-text\">{questions[current].question}</div>\r\n          <div>\r\n            {questions[current].options.map((option) => (\r\n              <button\r\n                key={option}\r\n                onClick={() => handleAnswer(option)}\r\n                className=\"option-button\"\r\n              >\r\n                {option}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\n}\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}